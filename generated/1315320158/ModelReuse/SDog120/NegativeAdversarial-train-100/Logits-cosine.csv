value,walltime,source_model,target_model,dataset,distance,representation,sampler,split,budget
5.662441182607836e-8,0.0006786930607631803,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.06991913914680481,0.00015504495240747929,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.09384794533252716,0.000306061003357172,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.29302123188972473,0.00012807000894099474,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
4.0531158873591266e-8,0.0002873379271477461,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
6.317496172414394e-6,0.00012578396126627922,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.39332154393196106,0.0002828460419550538,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3756813704967499,0.00012876803521066904,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3190993368625641,0.0002827979624271393,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.05803769454360008,0.0002967269392684102,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.12588012218475342,0.00012197799514979124,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.1338346153497696,0.00012271793093532324,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.32151317596435547,0.0002865369897335768,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.05803770199418068,0.00012258801143616438,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.058076005429029465,0.00012151896953582764,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.40893790125846863,0.00012955896090716124,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.42250609397888184,0.0001325929770246148,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.334852397441864,0.00013483199290931225,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.08129764348268509,0.00012236693874001503,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.14173413813114166,0.000277101993560791,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.14496657252311707,0.00012278102803975344,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.31447523832321167,0.0002771469298750162,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.08129778504371643,0.0003006990300491452,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.08127213269472122,0.00012188998516649008,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4035419523715973,0.00012221198994666338,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.42068901658058167,0.00012176996096968651,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.37040039896965027,0.00012245203834027052,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3486562967300415,0.00027694099117070436,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.36569952964782715,0.00012108800001442432,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3460589647293091,0.00012118590530008078,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3544878363609314,0.00012221094220876694,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3486558496952057,0.00013209600001573563,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3486068844795227,0.00013252405915409327,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.39780163764953613,0.00013586599379777908,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.39223915338516235,0.00013268005568534136,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.35954955220222473,0.00012121698819100857,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3555668592453003,0.00012111407704651356,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3896165192127228,0.00012041395530104637,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.384012907743454,0.00012171897105872631,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.36804836988449097,0.00012008100748062134,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.35556769371032715,0.00014390796422958374,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3556347191333771,0.00025901198387145996,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.42154884338378906,0.00027562608011066914,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.41383692622184753,0.00016928499098867178,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3765822649002075,0.0002754570450633764,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3716202676296234,0.00012144399806857109,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.39821526408195496,0.00012019695714116096,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.39103272557258606,0.00030009797774255276,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.37710335850715637,0.00012067402713000774,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.37162041664123535,0.00011990207713097334,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.37168648838996887,0.00024333398323506117,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.41900789737701416,0.00020020699594169855,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.42943260073661804,0.00027800409588962793,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.396422415971756,0.00012146902736276388,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.5204888582229614,0.00012244097888469696,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.5256284475326538,0.00012077298015356064,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.5129595994949341,0.0001201460836455226,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.5328291654586792,0.00012207799591124058,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4708693325519562,0.00012067798525094986,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.47980332374572754,0.0002857060171663761,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4820311665534973,0.00012070697266608477,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.5421331524848938,0.00012068101204931736,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.5474091172218323,0.0002747169928625226,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.5431608557701111,0.00012156798038631678,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.5333080291748047,0.0001221169950440526,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4678867757320404,0.0001203250139951706,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.46911296248435974,0.00012029602658003569,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.5006821751594543,0.00012051896192133427,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.0677507296204567,0.000203192001208663,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.032419122755527496,0.00014363799709826708,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.07257117331027985,0.00012995698489248753,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.32942450046539307,0.00012432492803782225,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.06775075942277908,0.00012404308654367924,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.06774523854255676,0.00012405496090650558,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3383040726184845,0.0001229800982400775,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3361297845840454,0.00012386904563754797,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.265529066324234,0.0001243130536749959,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
6.318092005130893e-8,0.00012161699123680592,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.029078975319862366,0.00012248195707798004,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.053163692355155945,0.0001221329439431429,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3555196523666382,0.00012191699352115393,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
4.887580828949467e-8,0.00012277497444301844,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
4.6676395868416876e-6,0.0001224139705300331,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3458276689052582,0.00012206507381051779,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3428499102592468,0.00012237904593348503,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.26530539989471436,0.00012206996325403452,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.013302807696163654,0.00012285204138606787,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.04129360243678093,0.00012145703658461571,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.059684764593839645,0.00012163503561168909,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3442261517047882,0.00012299499940127134,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.013302667066454887,0.00012225797399878502,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.01330470759421587,0.00012225995305925608,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.34601739048957825,0.00012047297786921263,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.34958168864250183,0.0001220940612256527,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3038489818572998,0.00012179906480014324,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.36272361874580383,0.0001209980109706521,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3329850137233734,0.0001232899958267808,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3484472632408142,0.00012998608872294426,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3363747000694275,0.00012207694817334414,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3627239167690277,0.00013323593884706497,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.36262112855911255,0.000132643966935575,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3486761152744293,0.00013345293700695038,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.35143619775772095,0.00012206193059682846,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3260380029678345,0.00012274098116904497,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3321208655834198,0.00012170197442173958,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3364391326904297,0.00012200500350445509,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.33348578214645386,0.0001219799742102623,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.32888901233673096,0.00012262596283107996,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3321225047111511,0.0001230388879776001,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.332157164812088,0.00012211501598358154,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.35718777775764465,0.00012237997725605965,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.35107848048210144,0.00012115295976400375,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3349930942058563,0.00012166495434939861,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.33490294218063354,0.0002478359965607524,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.33671334385871887,0.00012191198766231537,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3344654440879822,0.00012269406579434872,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.32860052585601807,0.0001228309702128172,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.33490318059921265,0.0001224610023200512,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3350176215171814,0.00012103503104299307,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.35411036014556885,0.0001215330557897687,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3499114215373993,0.00012114702258259058,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.33697032928466797,0.00012120907194912434,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.46941113471984863,0.00012231094297021627,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4680424928665161,0.00012256496120244265,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4745025634765625,0.0001225569285452366,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.48950085043907166,0.00012199103366583586,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4316125512123108,0.0001229459885507822,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.41472315788269043,0.00012253993190824986,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.42542994022369385,0.00012308498844504356,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.47955521941185,0.0001343169715255499,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.48078086972236633,0.00012173899449408054,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.47927817702293396,0.000279907020740211,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4698437452316284,0.00012194795999675989,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4245608448982239,0.00012221804354339838,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3987458348274231,0.00029717094730585814,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.43683892488479614,0.00012254202738404274,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.07882993668317795,0.00020219001453369856,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.02721230499446392,0.00014130992349237204,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.05854804068803787,0.00012760492973029613,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.32631370425224304,0.00012588105164468288,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.07883038371801376,0.00012306706048548222,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.07883765548467636,0.00012205890379846096,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3787885904312134,0.00012209895066916943,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3770453929901123,0.00012306903954595327,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2513948380947113,0.00012243003584444523,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.010108314454555511,0.0001225989544764161,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.02826276607811451,0.00013521790970116854,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.047007039189338684,0.00013672502245754004,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.34769299626350403,0.00012298906221985817,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.010108287446200848,0.00012286705896258354,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.010103574022650719,0.0001225479645654559,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.37792351841926575,0.00012293306645005941,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3780249059200287,0.0001218459801748395,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.252858430147171,0.00012227497063577175,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
5.900859889607091e-8,0.00011944200377911329,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.02510935626924038,0.00013262603897601366,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.04164348915219307,0.00013038492761552334,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.32679131627082825,0.00012211105786263943,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
5.125999535948722e-8,0.00012148800306022167,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
4.667043867812026e-6,0.0001223019789904356,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.37312421202659607,0.00012183305807411671,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3748844861984253,0.000122333993203938,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.26052752137184143,0.00012287904974073172,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.36074042320251465,0.00012362503912299871,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3399215638637543,0.00012167589738965034,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.34021103382110596,0.00012190197594463825,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3378819525241852,0.00013715005479753017,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.36074212193489075,0.00012207799591124058,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3607068657875061,0.00012226903345435858,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3913194239139557,0.00012133305426687002,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.38043349981307983,0.0002158770803362131,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.343099981546402,0.00012998003512620926,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3380030393600464,0.00013514806050807238,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3493782877922058,0.0002851199824362993,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.35213330388069153,0.00012282200623303652,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.33618173003196716,0.00012185703963041306,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3380037546157837,0.00012104201596230268,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3381485044956207,0.0001210611080750823,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3924027979373932,0.0001338899601250887,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.371799111366272,0.00016651302576065063,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.34173718094825745,0.0001260919962078333,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3335103988647461,0.00012373295612633228,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.35046684741973877,0.0001224329462274909,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.35092490911483765,0.00012240302748978138,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3374180495738983,0.00012207997497171164,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3335106372833252,0.00012206705287098885,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3335602581501007,0.0001225479645654559,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3939932882785797,0.0001218999968841672,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3730584979057312,0.0001222030259668827,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3409934341907501,0.00012143701314926147,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.48771652579307556,0.00012105598580092192,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.48711246252059937,0.000122040044516325,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4782811403274536,0.00012213701847940683,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.5213795900344849,0.000127198058180511,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4625959098339081,0.00012852298095822334,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4371204674243927,0.00013228808529675007,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4651738107204437,0.00012164097279310226,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.5307297706604004,0.00012182001955807209,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.5223513245582581,0.00012161093764007092,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.5220332741737366,0.00012105295900255442,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.507856547832489,0.00012214493472129107,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.46599745750427246,0.00012083596084266901,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.42233219742774963,0.00012096494901925325,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.483211874961853,0.00013081799261271954,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.24469074606895447,0.00021875801030546427,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.29793959856033325,0.00014160899445414543,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2904878556728363,0.00012876000255346298,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3261984884738922,0.00012898899149149656,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.24469125270843506,0.00012818898539990187,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.24471896886825562,0.00012582598719745874,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3007172644138336,0.0001257190015166998,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3116343021392822,0.00012479699216783047,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3758690357208252,0.00013458507601171732,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2995394468307495,0.00013306993059813976,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.35281112790107727,0.0001250880304723978,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.33713841438293457,0.000125400023534894,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3544255793094635,0.00012429303023964167,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2995394468307495,0.00012394192162901163,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2995079457759857,0.0001242529833689332,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3523477613925934,0.00012422690633684397,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.36729535460472107,0.0001228370238095522,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.37379688024520874,0.00012324901763349771,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.30804550647735596,0.00012411188799887896,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.36020976305007935,0.00012312107719480991,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.33260101079940796,0.00012318999506533146,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3427858352661133,0.00012199906632304192,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.30804526805877686,0.00012356089428067207,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3079855740070343,0.00012404704466462135,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3510652184486389,0.0001227869652211666,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3676204979419708,0.00012419302947819233,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.37341389060020447,0.00012317101936787367,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
6.973743182925318e-8,0.00012207997497171164,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.049862321466207504,0.00012383703142404556,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.018789421766996384,0.00012316694483160973,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.06338086724281311,0.0001233980292454362,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
4.231929651155042e-8,0.00012335297651588917,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.000038664340536342934,0.00013229192700237036,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2932735085487366,0.00015030091162770987,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2911990284919739,0.00013106095138937235,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.16440297663211823,0.00012342503760010004,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.05339949205517769,0.00012269103899598122,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.10166148096323013,0.00012296601198613644,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.09293345361948013,0.00012233201414346695,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.09397515654563904,0.00012362899724394083,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.053399208933115005,0.0001233760267496109,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.05346201732754707,0.00012286310084164143,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3382297158241272,0.00013376993592828512,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.35008564591407776,0.00012428697664290667,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.22848477959632874,0.00012346194125711918,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.06675270199775696,0.00012339395470917225,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.10942579060792923,0.00012371002230793238,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.10182683914899826,0.00012368499301373959,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.10235574841499329,0.0001238419208675623,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.06675317138433456,0.00012316799256950617,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.06671140342950821,0.00012360606342554092,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3336260914802551,0.00012337695807218552,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3511337339878082,0.00012297602370381355,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2632151246070862,0.000123340985737741,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.49191465973854065,0.00012277904897928238,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4906281530857086,0.00012384704314172268,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4796992540359497,0.00013238098472356796,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4585074484348297,0.00012231699656695127,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3868710398674011,0.0001251640496775508,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.38841134309768677,0.00012341397814452648,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.44652262330055237,0.00012418499682098627,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.5192304849624634,0.00012325402349233627,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.5203099250793457,0.00013318599667400122,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.5188831686973572,0.00012274808250367641,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4982281029224396,0.0001232200302183628,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.38921695947647095,0.0001230959314852953,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.39446601271629333,0.00012223992962390184,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.46699100732803345,0.0001226878957822919,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.26499781012535095,0.00020811602007597685,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.26562225818634033,0.0001573279732838273,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.27493399381637573,0.0001565119018778205,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3640497624874115,0.00012823904398828745,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2649981677532196,0.00012739503290504217,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2650630474090576,0.0001246549654752016,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3000667691230774,0.00012492993846535683,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2985786199569702,0.00012456905096769333,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.31114473938941956,0.00012415600940585136,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2494051158428192,0.00012397300451993942,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2837356626987457,0.00012395007070153952,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.28697583079338074,0.00012463901657611132,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.40803059935569763,0.00013619603123515844,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2494053840637207,0.00012513203546404839,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.24939589202404022,0.00012384599540382624,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3090321123600006,0.00012368091847747564,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2978944778442383,0.00012370897457003593,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3126690089702606,0.0001235839445143938,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.25935831665992737,0.0001239720731973648,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.29101887345314026,0.00013447494711726904,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2926331162452698,0.00013420998584479094,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.39073067903518677,0.0001230129273608327,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.25935807824134827,0.0001239400589838624,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2593594789505005,0.00012410501949489117,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.30460116267204285,0.00027478206902742386,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.30614784359931946,0.00012388196773827076,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.31721431016921997,0.00012209604028612375,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.04940909519791603,0.00028193509206175804,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.02102487161755562,0.00012295704800635576,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.03762005642056465,0.00012292899191379547,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.055908847600221634,0.00013032800052314997,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.0494086854159832,0.00012235401663929224,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.0495024248957634,0.00012303399853408337,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.30315864086151123,0.00012253702152520418,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2929708957672119,0.00012199301272630692,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.17746174335479736,0.00012240908108651638,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
6.616115655333488e-8,0.00013287004549056292,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.01922674849629402,0.00012385391164571047,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.017376793548464775,0.00012217205949127674,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.03917812928557396,0.000122212921269238,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
4.470348358154297e-8,0.00012119696475565434,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.00005297541792970151,0.00012264703400433064,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.30248263478279114,0.00012306706048548222,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2865293622016907,0.0001228859182447195,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.16569778323173523,0.0001226499443873763,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.00929475948214531,0.00012125901412218809,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.02835211716592312,0.00012238207273185253,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.026439225301146507,0.00012190500274300575,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.04649389162659645,0.00012218102347105742,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.00929483212530613,0.00012236600741744041,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.009332568384706974,0.0001325660850852728,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.30614912509918213,0.00012287497520446777,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.29646748304367065,0.00012242095544934273,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.1960345208644867,0.00012199801858514547,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4449709951877594,0.00012260000221431255,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.43875348567962646,0.00012264808174222708,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4330539405345917,0.00012255297042429447,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4850364327430725,0.00012199801858514547,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3837568759918213,0.00012280803639441729,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3849961757659912,0.00013451196718961,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4013909101486206,0.00013352197129279375,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.46676579117774963,0.00013184803538024426,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4633585214614868,0.0001229909248650074,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4631415903568268,0.00012188393156975508,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4578979015350342,0.0001216930104419589,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3928166329860687,0.00012246600817888975,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3775409758090973,0.00012287800200283527,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4196326434612274,0.00012251397129148245,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.23080287873744965,0.00020218302961438894,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.22935684025287628,0.0001516379415988922,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.23552581667900085,0.00013456307351589203,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.33696165680885315,0.00014302600175142288,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.23080293834209442,0.00013214501086622477,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.23084785044193268,0.0001288310158997774,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2844318151473999,0.00012454797979444265,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2782251238822937,0.00012372806668281555,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2837100923061371,0.00012417195830494165,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2220577448606491,0.000135085079818964,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.25543978810310364,0.00013549905270338058,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.25436440110206604,0.0003517959266901016,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.36331862211227417,0.00012881297152489424,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.22205780446529388,0.00012608908582478762,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.22205306589603424,0.00014350400306284428,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3042468726634979,0.00014485802967101336,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.28681397438049316,0.00012503191828727722,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2789762020111084,0.00013067107647657394,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2229243665933609,0.00013145396951586008,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2541610598564148,0.00012305995915085077,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.25528210401535034,0.00012379302643239498,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.35505911707878113,0.0001232579816132784,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.22292377054691315,0.00012451305519789457,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2229330837726593,0.00014315801672637463,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2984377145767212,0.00016618799418210983,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2876512408256531,0.00012274400796741247,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.29284411668777466,0.00012413994409143925,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.05887122079730034,0.00012373505160212517,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.016063787043094635,0.00012184306979179382,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.03793280944228172,0.0001396950101479888,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.04744141548871994,0.00013165490236133337,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.05887141823768616,0.00013298098929226398,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.058890603482723236,0.00013265199959278107,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.28983935713768005,0.0001346740173175931,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.27766939997673035,0.00013515993487089872,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.1573868691921234,0.00013328995555639267,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.0058079930022358894,0.00013231101911514997,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.0151295755058527,0.00012288393918424845,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.01353180781006813,0.0002814589533954859,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.03185712546110153,0.00012294307816773653,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.005807929672300816,0.0001226780004799366,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.005890066735446453,0.00012283993419259787,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2903887927532196,0.0002647069049999118,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.26001647114753723,0.0001231590285897255,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.14464356005191803,0.0001218969700857997,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
6.020069065471034e-8,0.00012140197213739157,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.013906862586736679,0.00012340000830590725,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.012916693463921547,0.00014209095388650894,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.029811430722475052,0.0001236859243363142,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
4.947185416881439e-8,0.00012407696340233088,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.00006178796320455149,0.00012239208444952965,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2837233245372772,0.00012218300253152847,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2590239644050598,0.00012156600132584572,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.15230293571949005,0.00012232596054673195,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3994169533252716,0.0001688369084149599,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3957705795764923,0.00012233201414346695,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.38496285676956177,0.00012231606524437666,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.42208126187324524,0.0001229109475389123,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3722475469112396,0.00012233899906277657,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.35076817870140076,0.00012298300862312317,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.35791367292404175,0.00012219802010804415,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.43919116258621216,0.00012154900468885899,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4407248795032501,0.0002958150580525398,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.43856459856033325,0.00012231897562742233,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4322274923324585,0.00012214004527777433,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.38243797421455383,0.000122333993203938,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.36861586570739746,0.00012213806621730328,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.39830994606018066,0.00012155098374933004,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4356374442577362,0.00022215698845684528,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.43426430225372314,0.000139000010676682,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4302472174167633,0.00012550805695354939,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4529346227645874,0.00012489501386880875,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4356369078159332,0.00012351898476481438,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.43560439348220825,0.0001225989544764161,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.37450358271598816,0.0001226559979841113,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3770277798175812,0.00012284296099096537,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.42498978972435,0.00012299790978431702,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4298124611377716,0.0001320850569754839,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4498806893825531,0.00013193394988775253,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.45097264647483826,0.00012199708726257086,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4812401831150055,0.00012181396596133709,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.42981261014938354,0.0001215049996972084,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.42979249358177185,0.00012356997467577457,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3709900379180908,0.0001224579755216837,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.36765792965888977,0.00012165703810751438,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.44270801544189453,0.00012050499208271503,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.42987900972366333,0.00012187997344881296,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.44807350635528564,0.00012170907575637102,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.44483280181884766,0.00012120103929191828,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4808393716812134,0.0001230280613526702,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.429878830909729,0.00012226705439388752,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.42991143465042114,0.00012331409379839897,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3710096776485443,0.00012181291822344065,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3606540262699127,0.00012093409895896912,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.42535626888275146,0.00012181897182017565,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.42823800444602966,0.00012172304559499025,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.43337973952293396,0.0001219060504809022,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.42197898030281067,0.00012150604743510485,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.41613805294036865,0.00012114597484469414,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.42823755741119385,0.00013496296014636755,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4282613694667816,0.00012236705515533686,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3903942108154297,0.00012148893438279629,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3772814869880676,0.00012730294838547707,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.39605894684791565,0.00012298196088522673,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.429782509803772,0.0002488469472154975,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4474889039993286,0.00012269499711692333,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.43879640102386475,0.0001220859121531248,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4244544506072998,0.00012333004269748926,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.42978110909461975,0.00012090802192687988,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4297407567501068,0.0001227350439876318,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.36888232827186584,0.00012126797810196877,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3749294579029083,0.00012059696018695831,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.40907490253448486,0.00013135198969393969,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.43291231989860535,0.00012140406761318445,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.44660869240760803,0.00013416307047009468,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.44001978635787964,0.00012110802344977856,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.42222335934638977,0.00012237404007464647,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4329129755496979,0.000275412923656404,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.43297919631004333,0.00012114096898585558,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.36826130747795105,0.00012217299081385136,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3701154589653015,0.00017820007633417845,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.4096825122833252,0.00012269499711692333,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
6.3776973036056e-8,0.000120344921015203,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.011322062462568283,0.00012379197869449854,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.03254068270325661,0.00012194702867418528,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.22753100097179413,0.00012143794447183609,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.32508277893066406,0.00013089401181787252,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2905603349208832,0.00012263795360922813,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.1275910586118698,0.00012210092972964048,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.39148223400115967,0.00012139510363340378,"train(mbnetv2,SDog120)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.38954150676727295,0.00012457894627004862,"train(mbnetv2,SDog120)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.38982436060905457,0.00012176006566733122,"train(mbnetv2,SDog120)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.37621158361434937,0.00012179091572761536,"train(mbnetv2,SDog120)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3504261076450348,0.00013967999257147312,"train(mbnetv2,SDog120)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2916012108325958,0.00012342201080173254,"train(mbnetv2,SDog120)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3474700450897217,0.00012141396291553974,"train(mbnetv2,SDog120)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3441431522369385,0.00021576997824013233,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3321627378463745,0.00014201703015714884,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3362445533275604,0.00013377005234360695,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3891109526157379,0.000131534063257277,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.344143271446228,0.00012853997759521008,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3441660404205322,0.0001281610457226634,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2620687782764435,0.00012823205906897783,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.25086188316345215,0.00012754893396049738,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2982069253921509,0.00012565404176712036,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3319237530231476,0.0001250819768756628,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.32988035678863525,0.00012606603559106588,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.33765777945518494,0.0001252189977094531,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.41353195905685425,0.00012479396536946297,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.33192384243011475,0.00012309197336435318,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3318937420845032,0.00012412399519234896,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.24835853278636932,0.00012310105375945568,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.23043552041053772,0.00012282095849514008,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3084842562675476,0.00012311292812228203,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3303396701812744,0.00012256705667823553,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3322468101978302,0.00012258999049663544,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.34000706672668457,0.00012203992810100317,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.414872407913208,0.00013594003394246101,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3303396701812744,0.00013661000411957502,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.33037787675857544,0.00012393202632665634,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2550179958343506,0.0001325539778918028,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.22983521223068237,0.00012323691044002771,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2834167778491974,0.00012200407218188047,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3386244475841522,0.00012352399062365294,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.31549179553985596,0.0001226019812747836,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3259812593460083,0.00012620899360626936,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3157019317150116,0.0001234399387612939,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.33862391114234924,0.0001229329500347376,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3386356234550476,0.00029198196716606617,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2695537507534027,0.00012343295384198427,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.25790101289749146,0.00012255494948476553,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.28486308455467224,0.00012287602294236422,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3172234892845154,0.00013336504343897104,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3129359781742096,0.00013505190145224333,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.31426331400871277,0.0001330670202150941,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3085654377937317,0.0001231209607794881,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3172236680984497,0.0001324019394814968,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.31714266538619995,0.000124023063108325,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2505057156085968,0.0001221450511366129,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2360764890909195,0.00012233690358698368,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.27101871371269226,0.00012249895371496677,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.31382742524147034,0.00012243993114680052,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3114650249481201,0.00012411794159561396,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3152313828468323,0.0001232139766216278,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.30733057856559753,0.00012264400720596313,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.3138277530670166,0.00012196996249258518,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.31384921073913574,0.0001224770676344633,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.26202914118766785,0.00012150395195931196,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2300938069820404,0.00012209604028612375,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2727956771850586,0.00012119195889681578,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2904468774795532,0.00012141198385506868,"train(resnet18,SDog120)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2850673496723175,0.0001843329519033432,"train(resnet18,SDog120)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2852615714073181,0.00012164900545030832,"train(resnet18,SDog120)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.33653807640075684,0.0001215239753946662,"train(resnet18,SDog120)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.29320085048675537,0.00012251699808984995,"train(resnet18,SDog120)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.2396637201309204,0.00012230104766786098,"train(resnet18,SDog120)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.25764885544776917,0.00013844703789800406,"train(resnet18,SDog120)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
6.318092005130893e-8,0.00012099102605134249,"train(resnet18,SDog120)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.006193519104272127,0.0001227069878950715,"train(resnet18,SDog120)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.007784013636410236,0.00012271897867321968,"train(resnet18,SDog120)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.021335028111934662,0.00012374797370284796,"train(resnet18,SDog120)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.29648661613464355,0.00012290803715586662,"train(resnet18,SDog120)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.23372825980186462,0.0001339890295639634,"train(resnet18,SDog120)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,100
0.06402576714754105,0.00013368995860219002,"train(resnet18,SDog120)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,100
