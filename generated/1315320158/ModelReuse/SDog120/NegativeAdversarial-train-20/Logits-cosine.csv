value,walltime,source_model,target_model,dataset,distance,representation,sampler,split,budget
5.364417887676609e-8,0.0006685920525342226,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.06569863855838776,0.00012548896484076977,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.09344689548015594,0.00010759697761386633,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2727358043193817,0.00010731094516813755,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
4.7683716530855236e-8,0.00011643802281469107,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
5.6147573559428565e-6,0.00010722409933805466,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3555578291416168,0.0003245510160923004,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3546501100063324,0.0002618370344862342,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2861718535423279,0.00010765297338366508,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.0561070516705513,0.00024191802367568016,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.13158082962036133,0.00010303303133696318,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.14897513389587402,0.00023735896684229374,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.28346118330955505,0.00023499107919633389,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.05610714107751846,0.0002362350933253765,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.056141335517168045,0.00010226003360003233,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35192662477493286,0.00015066296327859163,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3730403184890747,0.00010973098687827587,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.29928600788116455,0.00010500301141291857,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.08663284033536911,0.00023977004457265139,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.15340416133403778,0.00025438598822802305,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.15501758456230164,0.00010946404654532671,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.28553634881973267,0.00010385795030742884,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.08663275092840195,0.00010457099415361881,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.08664580434560776,0.00010251195635646582,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3858606517314911,0.0002369430148974061,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3741103410720825,0.0001025559613481164,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35259363055229187,0.0001116989878937602,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32161158323287964,0.00010267400648444891,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.329723596572876,0.00023005495313555002,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3232266902923584,0.00010277796536684036,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3297324478626251,0.00010415108408778906,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32161179184913635,0.00010396307334303856,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32177990674972534,0.00010403105989098549,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3560587465763092,0.00010443897917866707,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3710330128669739,0.00016857893206179142,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33258217573165894,0.0001049690181389451,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3148326873779297,0.00010356202255934477,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33991801738739014,0.00010248797480016947,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.334427148103714,0.00023500900715589523,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33488309383392334,0.00010281801223754883,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3148321211338043,0.00010302395094186068,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.31492143869400024,0.00010181404650211334,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.39570513367652893,0.00011082005221396685,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.36285340785980225,0.00010279996786266565,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33973413705825806,0.00010142405517399311,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3312463164329529,0.0002333850134164095,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34868496656417847,0.00010240706615149975,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3414836823940277,0.00010284502059221268,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3430422842502594,0.00010291894432157278,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3312470316886902,0.00010183500126004219,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3314378559589386,0.00010252092033624649,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35750386118888855,0.00011234497651457787,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35875049233436584,0.00011087895836681128,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3527333736419678,0.00010280800051987171,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.48018890619277954,0.00010351801756769419,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4807910919189453,0.00010187202133238316,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4705383777618408,0.0001024509547278285,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4955582618713379,0.00010258203838020563,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.44998759031295776,0.00010195793583989143,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.44472041726112366,0.00010276900138705969,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.45278453826904297,0.00010205304715782404,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5235961675643921,0.00010117294732481241,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5226603746414185,0.00011059409007430077,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5226653218269348,0.00011073797941207886,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5243998765945435,0.00010269694030284882,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.44866830110549927,0.00010161194950342178,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4345594346523285,0.00010245002340525389,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.46913328766822815,0.00010132091119885445,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.05657491087913513,0.00018133106641471386,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.033950887620449066,0.0001183999702334404,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.06683450192213058,0.00010624900460243225,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30361267924308777,0.00011548504699021578,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.05657524615526199,0.0001154099591076374,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.05660153552889824,0.00010588800068944693,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3304445147514343,0.00010466703679412603,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3305576741695404,0.00010528089478611946,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.25346532464027405,0.00010417599696666002,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
6.556511067401516e-8,0.00010349892545491457,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.024439018219709396,0.00011302705388516188,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.045338213443756104,0.00010485399980098009,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34632086753845215,0.00010232999920845032,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
2.9802322387695312e-8,0.00010687601752579212,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
4.422664460435044e-6,0.0001040829811245203,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3521495461463928,0.00023412599693983793,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33418288826942444,0.00010527705308049917,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.27486762404441833,0.00010396505240350962,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.013015622273087502,0.00010184396523982286,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.037014566361904144,0.00010336795821785927,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.05429978296160698,0.00010331894736737013,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33302709460258484,0.00010303303133696318,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.013015782460570335,0.00010433094576001167,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.013017898425459862,0.00010273698717355728,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35054343938827515,0.00010279205162078142,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3421778082847595,0.00010266306344419718,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.31565606594085693,0.00010230101179331541,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35471752285957336,0.00011158909182995558,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.336369127035141,0.00011313403956592083,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33022457361221313,0.00010265002492815256,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3283139765262604,0.00010344991460442543,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35471826791763306,0.00011106894817203283,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35487863421440125,0.00015095598064363003,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3598690629005432,0.00012001395225524902,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34493035078048706,0.00011916609946638346,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3234564960002899,0.00010525796096771955,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33773481845855713,0.00010450102854520082,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3482249677181244,0.00010432489216327667,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3352426290512085,0.0001037069596350193,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32206839323043823,0.00010273396037518978,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33773523569107056,0.00010364607442170382,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3379325270652771,0.00010297598782926798,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.36473649740219116,0.00010206806473433971,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35077759623527527,0.00011167593766003847,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3348100185394287,0.00010304595343768597,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34248605370521545,0.00010295200627297163,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34716349840164185,0.0001027189427986741,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33655059337615967,0.0001016759779304266,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3141443133354187,0.00010270299389958382,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34248754382133484,0.00010212801862508059,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34250158071517944,0.00010228808969259262,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3595903515815735,0.00010210403706878424,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3620195984840393,0.0001025970559567213,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3420097231864929,0.00011275697033852339,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.47196632623672485,0.00010272697545588017,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4802260398864746,0.00010284397285431623,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4905169606208801,0.00010185700375586748,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4664243161678314,0.00010208401363343,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4481654167175293,0.00010215502697974443,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4109051823616028,0.00012175505980849266,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4440620541572571,0.00011890893802046776,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.48738914728164673,0.0001067540142685175,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4773607850074768,0.0001048229169100523,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4758753776550293,0.00010544492397457361,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.47350701689720154,0.0001154160127043724,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.43051132559776306,0.00011572602670639753,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.413173109292984,0.00010259496048092842,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4421934187412262,0.00010208692401647568,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.09343206882476807,0.00018684403039515018,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.03103744424879551,0.00011956400703638792,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.0709465891122818,0.00011083995923399925,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3166568875312805,0.00010846799705177546,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.09343301504850388,0.00011721299961209297,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.09351378679275513,0.00011344789527356625,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4144876003265381,0.00010467693209648132,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.426356703042984,0.00010564003605395555,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2603285312652588,0.00010514399036765099,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.012895509600639343,0.00010506203398108482,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.03590105101466179,0.00010451395064592361,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.05071372911334038,0.0001038949703797698,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3202451467514038,0.00010428903624415398,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.012895405292510986,0.00010324199683964252,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.012889817357063293,0.00010345806367695332,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4094788134098053,0.00010384595952928066,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4046846926212311,0.00010343000758439302,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2794659733772278,0.00011474802158772945,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
7.450580596923828e-8,0.00010193593334406614,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.031161848455667496,0.0001041569048538804,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.04119197279214859,0.00010358798317611217,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32455840706825256,0.00011816003825515509,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
2.086162531611535e-8,0.00010283407755196095,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
5.143881026015151e-6,0.00010355899576097727,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.38954323530197144,0.00010342791210860014,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.408031165599823,0.00010300998110324144,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2872489392757416,0.0001035439781844616,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.37537938356399536,0.0001047209370881319,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3436983823776245,0.00011356500908732414,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35391825437545776,0.00010356097482144833,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3545604348182678,0.00010234804358333349,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3753795027732849,0.00011481507681310177,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3752707242965698,0.00010234804358333349,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4269489645957947,0.00010290008503943682,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.40776172280311584,0.00011379900388419628,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3596591353416443,0.0001036589965224266,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3504701256752014,0.00010412198025733232,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.36669811606407166,0.0001035439781844616,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.364419549703598,0.0001034450251609087,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.36165156960487366,0.00010394002310931683,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35047170519828796,0.0001032799482345581,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35051196813583374,0.0001028330298140645,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4317740797996521,0.00011252902913838625,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.38048088550567627,0.0001026899553835392,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3443288505077362,0.00010268494952470064,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3487549424171448,0.0001024509547278285,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3652101457118988,0.00010344001930207014,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.36666062474250793,0.0001023740042001009,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.36149853467941284,0.00010332593228667974,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3487545847892761,0.00010220799595117569,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3487216830253601,0.0001399629982188344,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.42634668946266174,0.00010891503188759089,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.400093138217926,0.0001058230409398675,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3559855818748474,0.00011628400534391403,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4767463803291321,0.00010422698687762022,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.47000589966773987,0.00023749098181724548,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.44620481133461,0.00010336993727833033,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5232435464859009,0.0002391940215602517,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.46781429648399353,0.00010354106780141592,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.44444146752357483,0.00010299705900251865,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5075422525405884,0.00010434398427605629,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5118688941001892,0.00010289403144270182,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5063033699989319,0.00010232208296656609,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5063439607620239,0.00010381208267062902,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4963225722312927,0.00011438503861427307,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4764366149902344,0.00010222499258816242,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4580402970314026,0.00010237202513962984,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.46335458755493164,0.00010153697803616524,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.23379142582416534,0.00018778792582452297,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2915061414241791,0.00011891208123415709,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.29906514286994934,0.0001061420189216733,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34420087933540344,0.00010455294977873564,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.23379242420196533,0.00010461302008479834,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.23381392657756805,0.000104895094409585,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3315427899360657,0.00010515109170228243,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3438798785209656,0.0001038470072671771,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.42099738121032715,0.00010281603317707777,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30202794075012207,0.00010500499047338963,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33734017610549927,0.00011105602607131004,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34782111644744873,0.00011630798690021038,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.39651888608932495,0.0001037579495459795,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30202817916870117,0.0001052849693223834,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3020293712615967,0.00010520103387534618,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.39285990595817566,0.00010299100540578365,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4104521870613098,0.00011141097638756037,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4299072325229645,0.00010338600259274244,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30775752663612366,0.00010371499229222536,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3384477496147156,0.00010378507431596518,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34769707918167114,0.00010339193977415562,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3716103434562683,0.00010558799840509892,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30775612592697144,0.0001036711037158966,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30777809023857117,0.00010256096720695496,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4029797613620758,0.00010245002340525389,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.40550461411476135,0.00010192790068686008,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.408893883228302,0.00010415702126920223,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
5.960464477539063e-8,0.00010075699537992477,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.05189190432429314,0.00010359298903495073,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.021189430728554726,0.00010234001092612743,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.07127244770526886,0.00010182603728026152,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
3.8743017682918435e-8,0.00010222999844700098,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.00003777742313104682,0.00010116200428456068,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34990495443344116,0.00010375899728387594,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3165102005004883,0.00010320392902940512,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.1832238882780075,0.00011288304813206196,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.057459644973278046,0.00010217796079814434,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.09995218366384506,0.00010364502668380737,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.09292789548635483,0.00010290194768458605,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.09861435741186142,0.00010326504707336426,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.05745958536863327,0.00010283594019711018,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.05752287432551384,0.000101790064945817,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.39212799072265625,0.00010250892955809832,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3800489604473114,0.0001027439720928669,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24463467299938202,0.00010278599802404642,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.0723261684179306,0.00010255200322717428,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.11083010584115982,0.00011478702072054148,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.10122313350439072,0.00011291506234556437,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.11162860691547394,0.00010258296970278025,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.07232731580734253,0.00010331592056900263,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.07239328324794769,0.00010489998385310173,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3919098973274231,0.00010301393922418356,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.37737733125686646,0.0001031489809975028,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2892671823501587,0.00010313000530004501,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5217490792274475,0.00010244804434478283,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5264418125152588,0.00010312499944120646,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5185337066650391,0.00010199705138802528,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4954443573951721,0.0001022430369630456,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4481450915336609,0.0001026419922709465,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4315341114997864,0.00010572909377515316,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4748799800872803,0.00011401297524571419,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5350397229194641,0.00010246201418340206,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.544674813747406,0.00010350800585001707,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5420178174972534,0.00010280800051987171,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5116699934005737,0.00010379205923527479,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.45085516571998596,0.00010377098806202412,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.43665942549705505,0.00010314700193703175,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4865895211696625,0.000101516954600811,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2292088270187378,0.000188324018381536,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.22352167963981628,0.00012184691149741411,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.23808176815509796,0.00010844296775758266,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3374212682247162,0.00010655098594725132,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.22920985519886017,0.00010577403008937836,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.22922122478485107,0.00011665408965200186,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.25480303168296814,0.00010553596075624228,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.27126437425613403,0.00010368297807872295,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.28773409128189087,0.00010480696801096201,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2130143940448761,0.00010374898556619883,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2579658627510071,0.00010468903928995132,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.26375943422317505,0.00010542105883359909,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.395901620388031,0.00010584201663732529,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.21301408112049103,0.00010502396617084742,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.212998628616333,0.00010403105989098549,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.26219823956489563,0.00010419008322060108,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2638193666934967,0.00010410498362034559,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.29491138458251953,0.00011489598546177149,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.21487554907798767,0.00010341091547161341,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2555377781391144,0.0001040030037984252,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2579045593738556,0.00014747201930731535,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.37631088495254517,0.00011032202746719122,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.21487481892108917,0.00010790093801915646,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.21496085822582245,0.00010776100680232048,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24797752499580383,0.0001065180404111743,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.27305901050567627,0.00010586995631456375,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2677302360534668,0.00012469408102333546,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.04474886879324913,0.00010431394912302494,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.02100132778286934,0.00010407506488263607,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.03756950795650482,0.00010415096767246723,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.05727893114089966,0.00010374491102993488,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.044749222695827484,0.00010578997898846865,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.04473709315061569,0.00011550204362720251,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.25110846757888794,0.00011122797150164843,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.25556087493896484,0.00010495900642126799,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.14843271672725677,0.00010463397484272718,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
4.7683716530855236e-8,0.00010130496229976416,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.020472317934036255,0.00011182401794940233,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.018384715542197227,0.00012365600559860468,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.04027310386300087,0.00011017592623829842,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
1.1920929132713809e-8,0.0001060080248862505,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.00004187822196399793,0.00010515900794416666,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2504701018333435,0.00010533502791076899,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.252715528011322,0.00010452605783939362,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.1391371339559555,0.00010672805365175009,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.00870196521282196,0.00011380808427929878,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.027675172314047813,0.00010342104360461235,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.0259238388389349,0.00010416202712804079,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.047047216445207596,0.00011098198592662811,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.00870177149772644,0.00011211598757654428,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.008763653226196766,0.00010308297351002693,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2643698751926422,0.00010293000377714634,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2777455449104309,0.00010380498133599758,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.1732577383518219,0.00010270392522215843,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4149421155452728,0.00010348705109208822,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4225722849369049,0.00010431010741740465,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4091462194919586,0.00010310497600585222,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.47346001863479614,0.000113707035779953,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.36853358149528503,0.00011054007336497307,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3549112379550934,0.00010451104026287794,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34385985136032104,0.00010293698869645596,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.48361220955848694,0.00010317994747310877,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.48313188552856445,0.00010364700574427843,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4814445972442627,0.0001027500256896019,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.45176491141319275,0.0001036300091072917,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.40656858682632446,0.00010274501983076334,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33960777521133423,0.00011292798444628716,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.38851478695869446,0.00010262196883559227,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.1995328962802887,0.00019117910414934158,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.19698724150657654,0.00012044410686939955,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2080671787261963,0.00011011201422661543,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3183455765247345,0.00010698498226702213,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.19953323900699615,0.0001042800722643733,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.19946828484535217,0.00010424095671623945,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2292647808790207,0.00010648602619767189,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.23139429092407227,0.00011499994434416294,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2639765441417694,0.00010430708061903715,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.18969018757343292,0.0001048319973051548,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.22529907524585724,0.00010343408212065697,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2128908634185791,0.00010504701640456915,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3582453429698944,0.00010422198101878166,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.1896897703409195,0.00010376505088061094,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.1897335648536682,0.0001040060305967927,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24594295024871826,0.00010498601477593184,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.23593822121620178,0.00010524201206862926,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2558370530605316,0.00010391697287559509,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.19147585332393646,0.0001054980093613267,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.23296292126178741,0.00011465989518910646,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.221109539270401,0.0001039230264723301,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3533693850040436,0.00010437692981213331,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.191475510597229,0.00010429299436509609,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.1914854496717453,0.00012252689339220524,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24396350979804993,0.00010413292329758406,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24588146805763245,0.00010283594019711018,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.23581404983997345,0.00010593293700367212,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.05520012974739075,0.00010361894965171814,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.01634531281888485,0.00010405003558844328,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.03760860115289688,0.00010433001443743706,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.04230698570609093,0.00010385701898485422,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.05519909784197807,0.00011464208364486694,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.055297769606113434,0.00011239899322390556,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24211108684539795,0.00010353804100304842,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.22557759284973145,0.0001153009943664074,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.12081784009933472,0.00010341999586671591,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.006880426313728094,0.0001023770309984684,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.014183461666107178,0.00010156503412872553,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.012270987033843994,0.00010503293015062809,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.02639699913561344,0.0001017209142446518,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.006880524568259716,0.0001025589881464839,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.007045445032417774,0.0001122819958254695,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.22468039393424988,0.0001030059065669775,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2168649435043335,0.00010297901462763548,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.11900093406438828,0.00011552905198186636,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
8.046627186786282e-8,0.00010105001274496317,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.01264714915305376,0.0001034389715641737,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.011633294634521008,0.00010438007302582264,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.02593521773815155,0.0001033080043271184,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
4.7683716530855236e-8,0.00010903098154813051,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.00005857646465301514,0.00010201591067016125,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.22656378149986267,0.00010369508527219296,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2135099619626999,0.00010258599650114775,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.12771224975585938,0.00010441604536026716,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33215922117233276,0.00010370800737291574,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3206954598426819,0.00010520906653255224,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3114760220050812,0.00010331999510526657,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3586970269680023,0.00010490801651030779,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3127545714378357,0.00010320392902940512,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2786952257156372,0.0001039489870890975,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3011515736579895,0.00010206399019807577,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.36415985226631165,0.00010301405563950539,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3723871111869812,0.0001045929966494441,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.36727461218833923,0.00011142401490360498,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3611219525337219,0.00010507996194064617,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.29748252034187317,0.00011221703607589006,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2888389229774475,0.00011223496403545141,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3309114873409271,0.00010261894203722477,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4361007809638977,0.00018421199638396502,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4324852526187897,0.00011852395255118608,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.41997671127319336,0.00011185300536453724,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.48544541001319885,0.00011932000052183867,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4361003041267395,0.00010776903945952654,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4360896050930023,0.00010605703573673964,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3837272524833679,0.0001069389982149005,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4110690951347351,0.00010403594933450222,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4283958077430725,0.00010425492655485868,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4321427345275879,0.0001029670238494873,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4562855362892151,0.00010290800128132105,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4438624978065491,0.00010212499182671309,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5226354002952576,0.00011287000961601734,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4321426749229431,0.00010138691868633032,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.43211498856544495,0.00010224990546703339,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.37224069237709045,0.00010187900625169277,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3662564158439636,0.0001209028996527195,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.44538140296936035,0.0001039779745042324,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4245479106903076,0.0001027669059112668,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.44223102927207947,0.00010447099339216948,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.43245744705200195,0.0001135440543293953,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4961618483066559,0.00010271102655678988,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.42454633116722107,0.00010459800250828266,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4246896803379059,0.00010333803948014975,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.36597925424575806,0.00010371697135269642,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34982678294181824,0.00010325899347662926,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4033585488796234,0.00010260194540023804,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4092780649662018,0.00010372803080826998,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.40187302231788635,0.0001107130665332079,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.39373350143432617,0.00010350404772907495,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.39317408204078674,0.0001018190523609519,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.40927654504776,0.00010297703556716442,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4093185067176819,0.0001018670154735446,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3693157732486725,0.00010232802014797926,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3602575957775116,0.00010076898615807295,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.37221425771713257,0.00010206899605691433,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4088614583015442,0.00011877005454152822,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4121555685997009,0.00010387401562184095,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4012741446495056,0.00011219200678169727,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3891761898994446,0.00011383695527911186,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.40886107087135315,0.00010164000559598207,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.40892767906188965,0.00010288495104759932,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3682536780834198,0.00011948193423449993,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3667869567871094,0.00010488391853868961,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.38926753401756287,0.0001021090429276228,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4068217873573303,0.0001035409513860941,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4066410958766937,0.00010359601583331823,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.40331369638442993,0.00010220194235444069,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3946925699710846,0.00011000095400959253,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4068219065666199,0.00010157900396734476,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4069770872592926,0.0001232899958267808,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.36891859769821167,0.00010158796794712543,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34842878580093384,0.00010307994671165943,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3923758864402771,0.00014038803055882454,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
6.854534007061375e-8,0.00012674496974796057,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.011496004648506641,0.00011773500591516495,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.03383781015872955,0.00010470207780599594,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.20661476254463196,0.00010493898298591375,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3157804608345032,0.0001049089478328824,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3039705157279968,0.00010657194070518017,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.12597636878490448,0.00010333000682294369,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.37707898020744324,0.00010292709339410067,"train(mbnetv2,SDog120)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3731077313423157,0.00010301207657903433,"train(mbnetv2,SDog120)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.37137117981910706,0.00010369601659476757,"train(mbnetv2,SDog120)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3517969250679016,0.00010308995842933655,"train(mbnetv2,SDog120)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35016658902168274,0.00011547096073627472,"train(mbnetv2,SDog120)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30264002084732056,0.00011213403195142746,"train(mbnetv2,SDog120)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3368222713470459,0.0001027159160003066,"train(mbnetv2,SDog120)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.31900447607040405,0.00019042892381548882,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3317728340625763,0.00011981092393398285,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3313705027103424,0.00010734307579696178,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.38568630814552307,0.00010672002099454403,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3190046548843384,0.00010616297367960215,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3190445303916931,0.00010561698582023382,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2863272428512573,0.00010730605572462082,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.26999571919441223,0.00011409493163228035,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2725135385990143,0.00010431103873997927,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32420575618743896,0.00025483896024525166,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3340013325214386,0.00010466191451996565,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34092965722084045,0.0001056579640135169,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4126288890838623,0.00010538008064031601,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3242075741291046,0.00010503199882805347,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32417362928390503,0.00011596898548305035,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2732301354408264,0.00023730599787086248,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2455207109451294,0.00010420591570436954,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.26624399423599243,0.00010401697363704443,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3240412473678589,0.00017180596478283405,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32535210251808167,0.00011320901103317738,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34447017312049866,0.00010420696344226599,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4096084237098694,0.00010487693361938,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32404130697250366,0.00010364199988543987,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32409435510635376,0.00010373303666710854,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.28426438570022583,0.00025367806665599346,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.22722506523132324,0.00011208292562514544,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.26113539934158325,0.00010463199578225613,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3145042955875397,0.00010378297884017229,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3036198019981384,0.00010460498742759228,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3101503849029541,0.00012421095743775368,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3047778904438019,0.00010478508193045855,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3145037293434143,0.00010390696115791798,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.314514696598053,0.00010399799793958664,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3000262677669525,0.0002464089775457978,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2579517364501953,0.00010339601431041956,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2831652760505676,0.00011237594299018383,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30362099409103394,0.00010436598677188158,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.31021663546562195,0.00010345398914068937,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30319151282310486,0.00010361103340983391,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2985391318798065,0.00010281195864081383,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30362293124198914,0.00010463700164109468,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3034575581550598,0.0001035250024870038,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.26739901304244995,0.00011361297219991684,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24853703379631042,0.00010500999633222818,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.284284383058548,0.00010430801194161177,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30374065041542053,0.000104882987216115,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3072667121887207,0.00010304898023605347,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3021951913833618,0.00011326500680297613,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2887435853481293,0.00011202995665371418,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30374154448509216,0.00010654598008841276,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3037561774253845,0.00010350998491048813,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.29406630992889404,0.00010430905967950821,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2324395626783371,0.00010351301170885563,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2742980420589447,0.00010375201236456633,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2884853482246399,0.00010535994078963995,"train(resnet18,SDog120)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.27760353684425354,0.00011116196401417255,"train(resnet18,SDog120)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2687523365020752,0.00011278397869318724,"train(resnet18,SDog120)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32689785957336426,0.00010409299284219742,"train(resnet18,SDog120)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.29640865325927734,0.00010426598601043224,"train(resnet18,SDog120)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2360011339187622,0.00010420707985758781,"train(resnet18,SDog120)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24275073409080505,0.00010354793630540371,"train(resnet18,SDog120)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
6.258487417198921e-8,0.00011209107469767332,"train(resnet18,SDog120)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.004026779439300299,0.00010290893260389566,"train(resnet18,SDog120)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.0056797293946146965,0.00010434200521558523,"train(resnet18,SDog120)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.019537046551704407,0.00010406505316495895,"train(resnet18,SDog120)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3212372958660126,0.00010284897871315479,"train(resnet18,SDog120)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24639423191547394,0.00010383501648902893,"train(resnet18,SDog120)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.06066405773162842,0.00011357502080500126,"train(resnet18,SDog120)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
