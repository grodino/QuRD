value,walltime,source_model,target_model,dataset,distance,representation,sampler,split,budget
7.748603536583687e-8,0.0006954759592190385,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.08370449393987656,0.00013080693315714598,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.11787301301956177,0.00011785398237407207,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32686781883239746,0.0001108159776777029,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
4.470348358154297e-8,0.00010658300016075373,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
5.957484063401353e-6,0.0001086540287360549,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4188164174556732,0.00010690500494092703,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4211851954460144,0.00010957499034702778,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3538561761379242,0.00010538497008383274,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.07178107649087906,0.00010489695705473423,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.15076397359371185,0.000103582045994699,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.15930740535259247,0.00010452303104102612,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.37493935227394104,0.00011457200162112713,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.07178063690662384,0.00010198308154940605,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.07172179222106934,0.00010335491970181465,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.48269373178482056,0.00010238296817988157,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4637550711631775,0.00010259891860187054,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33947813510894775,0.00010428798850625753,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.10304548591375351,0.00010451895650476217,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.16683587431907654,0.00010303396265953779,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.17866399884223938,0.00010336388368159533,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3502465486526489,0.0001029700506478548,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.10304492712020874,0.00010290893260389566,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.1030493825674057,0.00010313093662261963,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.48008856177330017,0.00011254008859395981,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4583248198032379,0.00010233803186565638,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.38660410046577454,0.00010252289939671755,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3836541473865509,0.00010361999738961458,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3699963688850403,0.00010276702232658863,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3549512028694153,0.00010170100722461939,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3551511764526367,0.00010334397666156292,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.38365456461906433,0.00010318902786821127,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3834519386291504,0.00010309705976396799,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.44092240929603577,0.00010305899195373058,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4700353741645813,0.000102453981526196,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3911409080028534,0.00010361196473240852,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3872308135032654,0.00010294804815202951,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4104510247707367,0.00010307098273187876,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3957202732563019,0.0001020519994199276,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.38019025325775146,0.0001133439363911748,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.38723137974739075,0.00010339007712900639,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.387401819229126,0.0001019530463963747,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4540974497795105,0.0001025170786306262,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.48441600799560547,0.00010307191405445337,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3951963186264038,0.00010227097664028406,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3760794997215271,0.00010151206515729427,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4054243564605713,0.00010314700193703175,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3905121088027954,0.00010302197188138962,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3756615221500397,0.00010278099216520786,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3760789930820465,0.00010351801756769419,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.37594836950302124,0.00010186305735260248,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.49494853615760803,0.00010205700527876616,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4730908274650574,0.00010227900929749012,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.40770697593688965,0.00011128594633191824,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5906120538711548,0.00010081904474645853,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5829049944877625,0.00010298704728484154,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5763915181159973,0.00010260299313813448,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5823149681091309,0.00010345701593905687,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.48514777421951294,0.00011299701873213053,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5115674734115601,0.0001031169667840004,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5642551779747009,0.00011075602378696203,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.6182669401168823,0.00010228098835796118,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.6086357235908508,0.00010244199074804783,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.6099128723144531,0.00010238296817988157,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5901129245758057,0.00010381394531577826,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5154390335083008,0.00010255305096507072,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.49411994218826294,0.00010180601384490728,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5599518418312073,0.00010255002416670322,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.08276183903217316,0.00016714201774448156,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.03570534661412239,0.00011526292655616999,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.07999981194734573,0.00010907906107604504,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3460865318775177,0.00010588997974991798,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.08276179432868958,0.00010559603106230497,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.08275560289621353,0.00010589801240712404,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5119137763977051,0.00011586095206439495,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4672132134437561,0.00010436598677188158,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2848029136657715,0.000103575992397964,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
7.450580596923828e-8,0.00010035093873739243,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.034056924283504486,0.00010320893488824368,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.05445887893438339,0.0001042619114741683,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35807693004608154,0.00010403303895145655,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
3.8743017682918435e-8,0.00010320101864635944,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
4.506111054070061e-6,0.0001028719125315547,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.45811185240745544,0.00010274501983076334,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4791374206542969,0.00010311498772352934,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2993740439414978,0.00010290497448295355,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.01880066469311714,0.00010197598021477461,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.04770409315824509,0.00010179099626839161,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.07080873101949692,0.00010196689981967211,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.343034029006958,0.00010316306725144386,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.01880078949034214,0.00010270706843584776,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.018817294389009476,0.0001020930940285325,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.48754388093948364,0.00010341906454414129,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.46993380784988403,0.00010379299055784941,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.31498080492019653,0.00010296003893017769,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4424581527709961,0.00010337296407669783,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.38395196199417114,0.00011390005238354206,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3977390229701996,0.00011287990491837263,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3890884220600128,0.00010078097693622112,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4424613118171692,0.00010242208372801542,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.44241243600845337,0.00010256492532789707,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5035468935966492,0.00010240997653454542,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4910011291503906,0.00010263093281537294,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4044169485569,0.0001024310477077961,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.394974946975708,0.00010182196274399757,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.39042454957962036,0.00010303803719580173,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.39117568731307983,0.00010343699250370264,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.38000693917274475,0.00010261009447276592,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.39497441053390503,0.00010236294474452734,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.39522209763526917,0.0001040030037984252,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5137448310852051,0.00010395899880677462,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.46928343176841736,0.00010263698641210794,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3966149389743805,0.00010327296331524849,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3912908136844635,0.00010342407040297985,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3961509168148041,0.00010325491894036531,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3906020522117615,0.00010334898252040148,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.38342833518981934,0.0001038690097630024,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.39129239320755005,0.00010341091547161341,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.39122533798217773,0.00010332500096410513,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.49161067605018616,0.00010339205618947744,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5059517621994019,0.00010381103493273258,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4064362049102783,0.000116142095066607,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.6152140498161316,0.00010291102807968855,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.6050943732261658,0.00010228599421679974,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5835517048835754,0.00010366598144173622,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.6000766158103943,0.00010356004349887371,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.616247296333313,0.00010252895299345255,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.565978467464447,0.00010305107571184635,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5887765884399414,0.00010212801862508059,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.585398256778717,0.00010274501983076334,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5974856615066528,0.00010289100464433432,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.600634753704071,0.00010337796993553638,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.614635705947876,0.00010287703480571508,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5829610824584961,0.00010322802700102329,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.540393054485321,0.00011308200191706419,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5955935120582581,0.00011306500528007746,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.07439154386520386,0.00018445495516061783,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.025577912107110023,0.00011902395635843277,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.054033149033784866,0.00010714109521359205,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.326049268245697,0.000106559949927032,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.07439166307449341,0.00010599789675325155,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.07438255846500397,0.0001053869491443038,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33961910009384155,0.00010510999709367752,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3658885955810547,0.00010322197340428829,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2666895091533661,0.0001031649298965931,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.007354042027145624,0.00010324607137590647,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.02144002541899681,0.00010395899880677462,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.03913469612598419,0.0001025879755616188,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3762661814689636,0.00010493199806660414,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.007354056928306818,0.00010304106399416924,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.0073604644276201725,0.00010301300790160894,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3407977223396301,0.00010304490569978952,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33520227670669556,0.000101714045740664,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2589467465877533,0.00010145595297217369,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
3.5762788286319847e-8,0.00009927898645401001,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.02010193094611168,0.00010367692448198795,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.03704715892672539,0.00010293605737388134,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3601348400115967,0.0001029920531436801,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
7.450580596923828e-8,0.00010354805272072554,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
4.863738922722405e-6,0.00010260299313813448,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3563689887523651,0.0001020519994199276,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3464145064353943,0.0001027919352054596,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2827020585536957,0.00010224396828562021,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3363773226737976,0.00010218494571745396,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.31229808926582336,0.00010177493095397949,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3236410915851593,0.00010169600136578083,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32820552587509155,0.00010271696373820305,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3363790810108185,0.0001035530585795641,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3361666798591614,0.00010237994138151407,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32916879653930664,0.00011039804667234421,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.36686742305755615,0.00011473300401121378,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2995961308479309,0.00011424999684095383,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30989494919776917,0.00010253000073134899,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33641648292541504,0.00010181206744164228,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3298082947731018,0.0001038089394569397,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.31786125898361206,0.00010322697926312685,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.309896320104599,0.00010243291035294533,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30997687578201294,0.00010307109914720058,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.36099204421043396,0.00010210997425019741,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.38868334889411926,0.00010265700984746218,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3086738586425781,0.00010289996862411499,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.319115549325943,0.00010258203838020563,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3407515585422516,0.0001023649238049984,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33727091550827026,0.00010416004806756973,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3293502926826477,0.00010284804739058018,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.31911501288414,0.00010246399324387312,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.31905707716941833,0.00010365201160311699,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35726991295814514,0.00010259391274303198,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3646742105484009,0.0001032890286296606,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3085951507091522,0.00010252604261040688,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.47400975227355957,0.00010341499000787735,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4682057797908783,0.00010222499258816242,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4426831305027008,0.00010267901234328747,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4706713557243347,0.00010253698565065861,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.40024176239967346,0.0001020969357341528,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.42196545004844666,0.00010274001397192478,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4291304051876068,0.00010284094605594873,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4782620370388031,0.00010245898738503456,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.47789859771728516,0.00010284106247127056,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4745918810367584,0.00011397595517337322,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4553372263908386,0.00010186899453401566,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4356513023376465,0.00010227097664028406,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.40739932656288147,0.00010319100692868233,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4336062967777252,0.00010222906712442636,"pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2348911464214325,0.0002056499943137169,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.27298974990844727,0.0001258880365639925,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2612207233905792,0.00011449807789176702,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2814923822879791,0.00011270900722593069,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2348913699388504,0.00010510010179132223,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.23488911986351013,0.0001053039450198412,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2857738733291626,0.00010338402353227139,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.28372249007225037,0.00010453502181917429,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3094058930873871,0.00010409997776150703,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2567515969276428,0.00010467204265296459,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2971676290035248,0.00010471895802766085,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.29625576734542847,0.00010513397864997387,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30231571197509766,0.00010429206304252148,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2567502558231354,0.00010478391777724028,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2567366659641266,0.00010490498971194029,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32208919525146484,0.0001032570144161582,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.31775030493736267,0.0001046638935804367,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.298748254776001,0.00010465702507644892,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.27352720499038696,0.00010442198254168034,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3081202208995819,0.00011224800255149603,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30833548307418823,0.00011326896492391825,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2996886074542999,0.00011187302879989147,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.273527055978775,0.00010376609861850739,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2735562324523926,0.00010447297245264053,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3164460062980652,0.00010325503535568714,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3302100896835327,0.00010404700879007578,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3347398638725281,0.0001034619053825736,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
4.470348358154297e-8,0.00010010995902121067,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.054067932069301605,0.00011284893844276667,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.022361507639288902,0.00011472008191049099,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.06593329459428787,0.0001128810690715909,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
4.17232506322307e-8,0.00011219002772122622,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.00003493428084766492,0.00010301009751856327,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2923937439918518,0.00010361894965171814,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.27887511253356934,0.00010324094910174608,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.15348684787750244,0.00010372395627200603,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.04769063740968704,0.00010332395322620869,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.09815298020839691,0.00010347203351557255,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.09420924633741379,0.00010386004578322172,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.09427952766418457,0.00010242697317153215,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.04769038408994675,0.00010216597001999617,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.047645702958106995,0.0001019240589812398,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.312552273273468,0.0001033049775287509,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30481746792793274,0.00010259600821882486,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2103104144334793,0.00010243093129247427,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.06525727361440659,0.00011120806448161602,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.11101263761520386,0.00011464802082628012,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.10641556978225708,0.00011168094351887703,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.10421963036060333,0.00011134007945656776,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.06525757163763046,0.00010281999129801989,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.06537377089262009,0.00010415900032967329,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.295056015253067,0.0001020550262182951,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.29817813634872437,0.00010188599117100239,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.23164859414100647,0.00010277400724589825,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4698483347892761,0.00010211695916950703,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.46888118982315063,0.000104130944237113,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.468615859746933,0.00010352104436606169,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4744827151298523,0.00010170706082135439,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3631569445133209,0.00010203802958130836,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.37824317812919617,0.0001037700567394495,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.42811208963394165,0.00010208599269390106,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4920775294303894,0.00010276096872985363,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.49363183975219727,0.00010300299618393183,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.48413267731666565,0.00010337005369365215,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.48325857520103455,0.0001024850644171238,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.38172584772109985,0.00010452000424265862,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33429399132728577,0.00011402205564081669,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4593009054660797,0.000101899029687047,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.22924073040485382,0.000211646081879735,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.23841142654418945,0.0001295160036534071,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.23592762649059296,0.00011091900523751974,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3233810067176819,0.00011654500849545002,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.22924037277698517,0.00010645994916558266,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.22916467487812042,0.00010537495836615562,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2503068745136261,0.00011661893222481012,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.23943550884723663,0.00010358996223658323,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.26629891991615295,0.00010484992526471615,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.22994880378246307,0.00010355701670050621,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.26515138149261475,0.00010511907748878002,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24786262214183807,0.00010574702173471451,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.37069302797317505,0.00010516191832721233,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2299487590789795,0.00010368507355451584,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.22992412745952606,0.00010350695811212063,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.25038546323776245,0.00010400591418147087,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.248768612742424,0.0001040380448102951,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2978610098361969,0.00010265305172652006,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.21950557827949524,0.0001027469988912344,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.26097315549850464,0.00010416400618851185,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24503116309642792,0.00010285095777362585,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3381347060203552,0.00010412093251943588,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.21950511634349823,0.00010425096843391657,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.21949346363544464,0.00010255503002554178,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2539234757423401,0.00010453199502080679,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24374452233314514,0.00010453001596033573,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2715286314487457,0.00010360102169215679,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.042514532804489136,0.00010517891496419907,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.017736945301294327,0.00010406109504401684,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.03189542889595032,0.00010315002873539925,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.05044414848089218,0.00011508807074278593,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.04251505807042122,0.00011126906611025333,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.04247399419546127,0.00010163895785808563,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2429085075855255,0.00010418298188596964,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24625539779663086,0.0001031740102916956,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.1719037890434265,0.00010307598859071732,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
3.8743017682918435e-8,0.00010029703844338655,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.017689477652311325,0.00010447506792843342,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.01674943044781685,0.00010450195986777544,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.0357903391122818,0.00010261801071465015,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
4.7683716530855236e-8,0.00010425306390970945,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.000041785835492191836,0.00010400894097983837,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24881426990032196,0.00010316295083612204,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24424155056476593,0.00010316097177565098,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.15818390250205994,0.00010372302494943142,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.0077611953020095825,0.00010327703785151243,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.025486495345830917,0.00010271603241562843,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.02419339120388031,0.00010324502363801003,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.042899228632450104,0.00010234501678496599,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.007761129643768072,0.00010272196959704161,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.007811301853507757,0.00010402710177004337,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.251742422580719,0.00010336004197597504,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2587481439113617,0.0001129040028899908,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.16896674036979675,0.00011530891060829163,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33563071489334106,0.00011307699605822563,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3324984610080719,0.00010269996710121632,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3388326168060303,0.00010260101407766342,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35547855496406555,0.00010196794755756855,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.31969302892684937,0.000102638965472579,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2995651066303253,0.00010329391807317734,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.27448421716690063,0.00010296003893017769,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3569570779800415,0.00010208901949226856,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34720462560653687,0.00010236108209937811,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34381234645843506,0.0001029639970511198,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32723215222358704,0.00010321894660592079,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3298493027687073,0.00010303989984095097,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2872465252876282,0.00010341801680624485,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3219456076622009,0.00010276096872985363,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2588721215724945,0.00020627700723707676,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.23240315914154053,0.00012109591625630856,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.25971725583076477,0.00010872806888073683,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3964329659938812,0.00010681501589715481,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2588724195957184,0.0001065150136128068,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2589631676673889,0.00010607403237372637,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.26326224207878113,0.00010506005492061377,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2701888084411621,0.00010415597353130579,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2674020826816559,0.00010514806490391493,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.240315243601799,0.00010352407116442919,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.25142836570739746,0.00010499695781618357,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2715073227882385,0.00010503898374736309,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4297342896461487,0.0001042200019583106,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24031642079353333,0.00010331394150853157,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24039824306964874,0.00010414293501526117,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.26107996702194214,0.00010449800174683332,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.27828770875930786,0.00010402803309261799,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.26132726669311523,0.00010462896898388863,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2371310293674469,0.00010479788761585951,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2533746063709259,0.00010299799032509327,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2769183814525604,0.0001039580674842,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.41420015692710876,0.00011302006896585226,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.23713083565235138,0.00011392496526241302,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2370540201663971,0.00010274804662913084,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2813087999820709,0.00010422803461551666,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2914716899394989,0.00010397902224212885,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2555840015411377,0.00010280602145940065,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.0771946907043457,0.00010379601735621691,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.015923837199807167,0.00010401697363704443,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.04928683489561081,0.00010318902786821127,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.05111382156610489,0.00010207202285528183,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.07719427347183228,0.00010364898480474949,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.07733223587274551,0.00010385201312601566,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.28745606541633606,0.00010408402886241674,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.26966431736946106,0.0001031520077958703,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.17079028487205505,0.00010319601278752089,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.009315842762589455,0.00010356795974075794,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.013837853446602821,0.00010335794650018215,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.015352961607277393,0.00010341091547161341,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.034448347985744476,0.0001029890263453126,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.009316280484199524,0.00011085206642746925,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.009354916401207447,0.00010279403068125248,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24285510182380676,0.00013532605953514576,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2701002061367035,0.00010294211097061634,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.1285078227519989,0.00010425597429275513,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
4.17232506322307e-8,0.00010074698366224766,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.013082137331366539,0.00010321196168661118,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.012823844328522682,0.00010266504250466824,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.032642148435115814,0.00010342302266508341,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
3.278255533700758e-8,0.00010332197416573763,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.000043442843889351934,0.00010129401925951242,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.26322662830352783,0.00010237202513962984,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2729203402996063,0.00010323501192033291,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.13114528357982635,0.00010336097329854965,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4336926341056824,0.00010296003893017769,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.41357287764549255,0.00010376295540481806,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.45344725251197815,0.0001034419983625412,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.49816790223121643,0.00010339997243136168,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.38842082023620605,0.0001040769275277853,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.43164119124412537,0.00010399206075817347,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4020739197731018,0.00010422407649457455,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.406869500875473,0.00010237994138151407,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.41490060091018677,0.00010348903015255928,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.42130225896835327,0.0001031610881909728,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.41363611817359924,0.00010374502744525671,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4193713068962097,0.00010410998947918415,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4024224877357483,0.00010405306238681078,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.39570286870002747,0.00010222895070910454,"pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35597461462020874,0.00017738097812980413,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35249215364456177,0.00012685800902545452,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34645214676856995,0.00011577398981899023,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3649514317512512,0.0001181259285658598,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3559761643409729,0.00010559998918324709,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3559960126876831,0.00010536902118474245,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3049744665622711,0.0001056100009009242,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30069345235824585,0.00010438100434839725,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35368797183036804,0.0001034510787576437,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3524220883846283,0.00010473502334207296,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3631535470485687,0.00010449695400893688,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3434804677963257,0.00010291195940226316,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3884700834751129,0.00010142801329493523,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3524227738380432,0.00010311591904610395,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.352324903011322,0.0001034480519592762,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3137792944908142,0.00010272394865751266,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.28732830286026,0.00010284804739058018,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.36337536573410034,0.00010313594248145819,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3392232060432434,0.00010312697850167751,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35477909445762634,0.00010379799641668797,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.34214264154434204,0.00010274304077029228,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35813331604003906,0.00010253710206598043,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3392234742641449,0.00010380800813436508,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33922794461250305,0.00010341394226998091,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2958916127681732,0.00010279100388288498,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2807438373565674,0.00010382093023508787,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3426746726036072,0.00010412000119686127,"train(mbnetv2,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3679100275039673,0.00011193403042852879,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3535986542701721,0.00011117605026811361,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.37143081426620483,0.00010338600259274244,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3623916804790497,0.000102632911875844,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3679104447364807,0.00010294397361576557,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3681522011756897,0.00010141509119421244,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.31003254652023315,0.00010273593943566084,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.291219025850296,0.00010327599011361599,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3343849778175354,0.00010305200703442097,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3545629382133484,0.00010272301733493805,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3522645831108093,0.00010298995766788721,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.353532999753952,0.00010235200170427561,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35905179381370544,0.00010248599573969841,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.354560911655426,0.00010293093509972095,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35438865423202515,0.00010319601278752089,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.31319281458854675,0.00010229297913610935,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.28451472520828247,0.0001035280292853713,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33061403036117554,0.00010336004197597504,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3576856255531311,0.00010348798241466284,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35546737909317017,0.00010311894584447145,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3556678891181946,0.00010280893184244633,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.359261155128479,0.00010150903835892677,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.35768669843673706,0.00010334094986319542,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3576987683773041,0.00010340800508856773,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2699592709541321,0.0001036209287121892,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2862112522125244,0.00011243298649787903,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.31988486647605896,0.00010226096492260695,"train(mbnetv2,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
8.940696716308594e-8,0.00009997491724789143,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.009940152987837791,0.00010279298294335604,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.026834964752197266,0.00010188890155404806,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.18312044441699982,0.00010295503307133913,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.29062172770500183,0.00010362500324845314,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24775242805480957,0.00011161505244672298,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.11058227717876434,0.00010222697164863348,"train(mbnetv2,SDog120)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33466076850891113,0.00010257400572299957,"train(mbnetv2,SDog120)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32633963227272034,0.00010255095548927784,"train(mbnetv2,SDog120)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32407671213150024,0.00010364304762333632,"train(mbnetv2,SDog120)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32788002490997314,0.0001016850583255291,"train(mbnetv2,SDog120)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.29594749212265015,0.00010186689905822277,"train(mbnetv2,SDog120)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2823450267314911,0.00010265305172652006,"train(mbnetv2,SDog120)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2842750549316406,0.0001016790047287941,"train(mbnetv2,SDog120)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.43602457642555237,0.0002027139998972416,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3990965485572815,0.00012159906327724457,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4295366406440735,0.00010824797209352255,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.44448384642601013,0.00010763690806925297,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.43602508306503296,0.00010673399083316326,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4361376166343689,0.00010546192061156034,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32677537202835083,0.00010517099872231483,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30129891633987427,0.00010529905557632446,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.36184316873550415,0.00010552199091762304,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.40935152769088745,0.0001049940474331379,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.392301470041275,0.00010492303408682346,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4208676218986511,0.00010348705109208822,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5308566689491272,0.00010361499153077602,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4093515872955322,0.00010350998491048813,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4092341959476471,0.00010390195529907942,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.31913188099861145,0.00010527996346354485,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.28566235303878784,0.00010373094119131565,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.33208954334259033,0.00010503910016268492,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3973817825317383,0.0001043250085785985,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.38689976930618286,0.0001044049859046936,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4137016236782074,0.00010327296331524849,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.5067651867866516,0.00010438193567097187,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.397381454706192,0.00010299298446625471,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.397503137588501,0.00010318506974726915,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.31175854802131653,0.00010483898222446442,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2450597733259201,0.00010406295768916607,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3058314323425293,0.00010287598706781864,"train(resnet18,SDog120)","pretrain(mbnetv2,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4500347077846527,0.00011355301830917597,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.427489697933197,0.00011337397154420614,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.43251195549964905,0.00011529389303177595,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4059741497039795,0.00010309601202607155,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.45003563165664673,0.0001028840197250247,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4500221610069275,0.00011220201849937439,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3272606432437897,0.00010466889943927526,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.30626755952835083,0.00010419799946248531,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.344147264957428,0.00010392197873443365,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.1)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.43372559547424316,0.00011293904390186071,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.42659783363342285,0.00011509598698467016,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4164549708366394,0.00011258700396865606,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4133361279964447,0.000104136997833848,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4337232708930969,0.00010320800356566906,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.43361419439315796,0.00011603301391005516,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3222696781158447,0.00011305592488497496,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2763122022151947,0.00010294304229319096,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32976508140563965,0.00010279205162078142,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,0.5)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4260573983192444,0.00010272697545588017,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.42116039991378784,0.0001037130132317543,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.41473960876464844,0.00010298402048647404,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.4088568687438965,0.00010359194129705429,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.426058828830719,0.00010396400466561317,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(float16)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.42618364095687866,0.00010249600745737553,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->quantize(qint8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2740600109100342,0.00010290101636201143,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.25139471888542175,0.00011450191959738731,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3277803361415863,0.0001165259163826704,"train(resnet18,SDog120)","pretrain(resnet18,imagenet-1k)->transfer(SDog120,1.0)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2774226665496826,0.00010401604231446981,"train(resnet18,SDog120)","train(mbnetv2,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.26511454582214355,0.00010362605098634958,"train(resnet18,SDog120)","train(mbnetv2,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2739907205104828,0.00010282604489475489,"train(resnet18,SDog120)","train(mbnetv2,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3795729875564575,0.00010347296483814716,"train(resnet18,SDog120)","train(mbnetv2,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.3323918282985687,0.00010406400542706251,"train(resnet18,SDog120)","train(mbnetv2,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.27301037311553955,0.00010520906653255224,"train(resnet18,SDog120)","train(mbnetv2,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.2688468098640442,0.00010347599163651466,"train(resnet18,SDog120)","train(mbnetv2,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
5.960464477539063e-8,0.00010094605386257172,"train(resnet18,SDog120)","train(resnet18,SDog120)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.005044588353484869,0.00010378297884017229,"train(resnet18,SDog120)","train(resnet18,SDog120)->prune(0.2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.006914219353348017,0.00011276709847152233,"train(resnet18,SDog120)","train(resnet18,SDog120)->prune(0.5)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.01970450021326542,0.00011531403288245201,"train(resnet18,SDog120)","train(resnet18,SDog120)->prune(0.8)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.32805687189102173,0.00010388193186372519,"train(resnet18,SDog120)","train(resnet18,SDog120)->steal(mbnetv2)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.24018606543540955,0.00011453195475041866,"train(resnet18,SDog120)","train(resnet18,SDog120)->steal(resnet18)",SDog120,cosine,Logits,NegativeAdversarial,train,20
0.06733036041259766,0.00010468903928995132,"train(resnet18,SDog120)","train(resnet18,SDog120)->distill()",SDog120,cosine,Logits,NegativeAdversarial,train,20
